<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on dev.bins</title>
    <link>https://devbins.github.io/tags/android/</link>
    <description>Recent content in Android on dev.bins</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Sat, 13 Mar 2021 00:00:00 +0800</lastBuildDate><atom:link href="https://devbins.github.io/tags/android/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Android中管道的使用</title>
      <link>https://devbins.github.io/post/pipe/</link>
      <pubDate>Sat, 13 Mar 2021 00:00:00 +0800</pubDate>
      
      <guid>https://devbins.github.io/post/pipe/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;最近读了一些 &lt;code&gt;Android&lt;/code&gt; 源码，发现其中不少是用 &lt;code&gt;pipe&lt;/code&gt; 机制来实现的，并且和我们往常使用 &lt;code&gt;pipe&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MPAndroidChart 使用总结</title>
      <link>https://devbins.github.io/post/mpandroidchart/</link>
      <pubDate>Mon, 16 Mar 2020 00:00:00 +0800</pubDate>
      
      <guid>https://devbins.github.io/post/mpandroidchart/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;今年开工以来，一直接触图表相关的开发，经过选择最后采用 &lt;a href=&#34;https://github.com/PhilJay/MPAndroidChart&#34;&gt;MPAndroidChart&lt;/a&gt; ，期间碰到了一些问题，踩了不少坑。特来总结一下，以免日后忘记。这些知识点虽然不难，但是非常零碎，找起来比较麻烦。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>用Docker下载AOSP源码</title>
      <link>https://devbins.github.io/post/aosp/</link>
      <pubDate>Wed, 23 Oct 2019 00:00:00 +0800</pubDate>
      
      <guid>https://devbins.github.io/post/aosp/</guid>
      <description>AOSP 介绍 AOSP 是 Android 开放源码项目，通俗点就是整个 Android 的源码。有了 AOSP 我们就可以在源码的层面去了解整个 Android 系统。甚至可以自己基于 AOSP 去定制自己系统，这也是众多 ROM 的直接或间接起源。 虽然我们不一定会去做 ROM ，但对于开发来说，了解 Android 系统的底层原理还是非常有必要的，这也是成为高级工程师的必经之路。源码里面有非常多的东西值得我们去学习，是一座宝藏，接下来我们就要把这个宝藏下载下来。 Repo 工具 目前市面上最流行的版本控制管理工具是 Git ，</description>
    </item>
    
    <item>
      <title>RxLifecycle 原理解析</title>
      <link>https://devbins.github.io/post/rxlifecycle/</link>
      <pubDate>Sat, 27 Jul 2019 00:00:00 +0800</pubDate>
      
      <guid>https://devbins.github.io/post/rxlifecycle/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Photo by Léonard Cotte on Unsplash&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;介绍&#34;&gt;介绍&lt;/h2&gt;
&lt;p&gt;从名字中可以看出 &lt;code&gt;RxLifecycle&lt;/code&gt; 和生命周期有关。也的确如此， &lt;code&gt;RxLifecycle&lt;/code&gt; 通过监听生命周期的变化，来解决 &lt;code&gt;RxJava&lt;/code&gt; 内存泄漏的问题。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
